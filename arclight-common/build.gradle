plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id 'java'
    id 'idea'
}

apply plugin: io.izzel.arclight.gradle.ArclightGradlePlugin

architectury {
    minecraft = minecraftVersion
    common("forge")
}

loom {
    silentMojangMappingsLicense()
    accessWidenerPath = file("src/main/resources/arclight.accesswidener")
}

arclight {
    mcVersion = minecraftVersion
    forgeVersion = project.ext.forgeVersion
    bukkitVersion = 'v1_20_R3'
    accessTransformer = project.file('bukkit.at')
    extraMapping = project(':arclight-common').file('extra_mapping.tsrg')
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    maven { url = 'https://repo.spongepowered.org/maven' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://files.minecraftforge.net/maven/' }
    maven { url = 'https://maven.izzel.io/releases' }
    maven { url = 'https://jitpack.io/' }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:$minecraftVersion"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:$fabricLoaderVersion"

    compileOnly "io.izzel.arclight.generated:spigot:${minecraftVersion}:deobf"

    implementation "org.spigotmc:spigot-api:$minecraftVersion-R0.1-SNAPSHOT@jar"
    implementation 'org.jetbrains:annotations:23.0.0'

    implementation ('io.izzel.arclight:mixin-tools:1.1.0') { transitive = false }
    annotationProcessor ('io.izzel.arclight:mixin-tools:1.1.0') { transitive = false }

    implementation 'jline:jline:2.12.1'
    implementation 'net.md-5:SpecialSource:1.11.0'
    implementation 'org.apache.logging.log4j:log4j-jul:2.15.0'
    implementation 'net.md-5:bungeecord-chat:1.20-R0.1'
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.yaml:snakeyaml:2.0'
    implementation "io.izzel:tools:$toolsVersion"
    implementation "io.izzel.arclight:arclight-api:$apiVersion"
    implementation project(':i18n-config')
}

java {
    withSourcesJar()
}

compileJava {
    options.compilerArgs << '-XDignore.symbol.file' << '-XDenableSunApiLintControl'
    options.encoding = 'UTF-8'
}
